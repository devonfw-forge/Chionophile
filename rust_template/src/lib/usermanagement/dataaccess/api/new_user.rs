use crate::lib::general::database::schema::users;
use crate::lib::usermanagement::logic::api::user_eto::UserEto;

/*
    The struct NewUser also relates to the users table in schema.rs. It's neeeded because in this
    case, the table ID is of type BIGSERIAL, which means it's autogenerated.
    This struct will only be used for creating users in our database.
*/
#[derive(Debug, Clone, Insertable)]
#[table_name="users"]
pub struct NewUser {
    pub username: Option<String>,
    pub name: Option<String>,
    pub password: Option<String>,
    pub phone_number: Option<String>,
    pub accepted_commercial: Option<bool>,
    pub accepted_terms: bool,
}

impl NewUser {
    pub fn from(
        user_eto: UserEto
    ) -> NewUser {
        NewUser {
            username: user_eto.username,
            name: user_eto.name,
            phone_number: user_eto.phone_number,
            password: user_eto.password,
            accepted_commercial: user_eto.accepted_commercial,
            accepted_terms: user_eto.accepted_terms,
        }
    }
}
